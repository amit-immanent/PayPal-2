{"ast":null,"code":"var _jsxFileName = \"/home/amit-yadav/Documents/Amit_Yadav/paypal 2.0/paypal/src/PayPalPaymnet.jsx\";\nimport React from 'react';\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PayPalPaymnet = () => {\n  const createOrder = data => {\n    // Order is created on the server and the order id is returned\n    return fetch(\"/my-server/create-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // use the \"body\" param to optionally pass additional order information\n      // like product skus and quantities\n      body: JSON.stringify({\n        cart: [{\n          sku: \"YOUR_PRODUCT_STOCK_KEEPING_UNIT\",\n          quantity: \"YOUR_PRODUCT_QUANTITY\"\n        }]\n      })\n    }).then(response => response.json()).then(order => order.id);\n  };\n  const onApprove = data => {\n    // Order is captured on the server and the response is returned to the browser\n    return fetch(\"/my-server/capture-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    }).then(response => response.json());\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButtons\n  // createOrder={(data, actions) => createOrder(data, actions)}\n  // onApprove={(data, actions) => onApprove(data, actions)}\n  , {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = PayPalPaymnet;\nvar _c;\n$RefreshReg$(_c, \"PayPalPaymnet\");","map":{"version":3,"names":["React","PayPalButtons","jsxDEV","_jsxDEV","PayPalPaymnet","createOrder","data","fetch","method","headers","body","JSON","stringify","cart","sku","quantity","then","response","json","order","id","onApprove","orderID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/amit-yadav/Documents/Amit_Yadav/paypal 2.0/paypal/src/PayPalPaymnet.jsx"],"sourcesContent":["import React from 'react'\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\n\nexport const PayPalPaymnet = () => {\n\n  const createOrder = (data) => {\n    // Order is created on the server and the order id is returned\n    return fetch(\"/my-server/create-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // use the \"body\" param to optionally pass additional order information\n      // like product skus and quantities\n      body: JSON.stringify({\n        cart: [\n          {\n            sku: \"YOUR_PRODUCT_STOCK_KEEPING_UNIT\",\n            quantity: \"YOUR_PRODUCT_QUANTITY\",\n          },\n        ],\n      }),\n    })\n      .then((response) => response.json())\n      .then((order) => order.id);\n  };\n  const onApprove = (data) => {\n    // Order is captured on the server and the response is returned to the browser\n    return fetch(\"/my-server/capture-paypal-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    })\n      .then((response) => response.json());\n  };\n\n  return (\n    <PayPalButtons\n      // createOrder={(data, actions) => createOrder(data, actions)}\n      // onApprove={(data, actions) => onApprove(data, actions)}\n    />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAEjC,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5B;IACA,OAAOC,KAAK,CAAC,gCAAgC,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACD;MACA;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE,CACJ;UACEC,GAAG,EAAE,iCAAiC;UACtCC,QAAQ,EAAE;QACZ,CAAC;MAEL,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAKA,KAAK,CAACC,EAAE,CAAC;EAC9B,CAAC;EACD,MAAMC,SAAS,GAAIf,IAAI,IAAK;IAC1B;IACA,OAAOC,KAAK,CAAC,iCAAiC,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBU,OAAO,EAAEhB,IAAI,CAACgB;MAChB,CAAC;IACH,CAAC,CAAC,CACCN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACEf,OAAA,CAACF;EACC;EACA;EAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEN,CAAC;AAAAC,EAAA,GA3CYvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}